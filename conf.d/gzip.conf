# vi: ft=nginx

# Enable gzip compression.
# Default: off
gzip            on;


# Sets the number and size of buffers used to compress a response. Default is equal to page size
# Syntax: gzip_buffers number size;
# Default: (32 4k)|(16 8k)
gzip_buffers    32  4k;

# Compression level (1-9).
# 5 is a perfect compromise between size and CPU usage, offering about
# 75% reduction for most ASCII files (almost identical to level 9).
# Default: 1
gzip_comp_level 5;

# Disables gzipping of responses for requests with “User-Agent” header fields matching any of the specified regular expressions.
# Syntax: gzip_disable regex ...;
# gzip_disable <setting>;

# Sets the minimum HTTP version of a request required to compress a response.
# Syntax: gzip_http_version 1.0 | 1.1;
# Default: 1.1;
gzip_http_version 1.0;

# Don't compress anything that's already small and unlikely to shrink much if at all
# Default: 20
gzip_min_length    256;

# Enables or disables gzipping of responses for proxied requests depending on the request and response. The fact that the request is proxied is determined by the presence of the “Via” request header field. The directive accepts multiple parameters:
# off             disables compression for all proxied requests, ignoring other parameters;
# expired         enables compression if a response header includes the “Expires” field with a value that disables caching;
# no-cache        enables compression if a response header includes the “Cache-Control” field with the “no-cache” parameter;
# no-store        enables compression if a response header includes the “Cache-Control” field with the “no-store” parameter;
# private         enables compression if a response header includes the “Cache-Control” field with the “private” parameter;
# no_last_modifie enables compression if a response header does not include the “Last-Modified” field;
# no_etag         enables compression if a response header does not include the “ETag” field;
# auth            enables compression if a request header includes the “Authorization” field;
# any             enables compression for all proxied requests.

# Compress data even for clients that are connecting to us via proxies,
# identified by the "Via" header (required for CloudFront).
# Syntax:         gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any ...;
# Default: off
gzip_proxied       any;

# Enables gzipping of responses for the specified MIME types in addition to “text/html”. The special value “*” matches any MIME type (0.8.29). Responses with the “text/html” type are always compressed.
# Syntax:         gzip_types mime-type ...;
# Default:        gzip_types text/html;
# Compress all output labeled with one of the following MIME-types.
# text/html is always compressed by gzip module.
# Default: text/html
gzip_types
  application/atom+xml
  application/javascript
  application/json
  application/ld+json
  application/manifest+json
  application/rss+xml
  application/vnd.geo+json
  application/vnd.ms-fontobject
  application/x-font-ttf
  application/x-web-app-manifest+json
  application/xhtml+xml
  application/xml
  font/opentype
  image/bmp
  image/svg+xml
  image/x-icon
  text/cache-manifest
  text/css
  text/plain
  text/vcard
  text/vnd.rim.location.xloc
  text/vtt
  text/x-component
  text/x-cross-domain-policy;


# Enables or disables inserting the “Vary: Accept-Encoding” response header field if the directives gzip, gzip_static, or gunzip are active.
# Tell proxies to cache both the gzipped and regular version of a resource
# whenever the client's Accept-Encoding capabilities header varies;
# Avoids the issue where a non-gzip capable client (which is extremely rare
# today) would display gibberish if their proxy gave them the gzipped version.
# Default: off
gzip_vary          on;


# This should be turned on if you are going to have pre-compressed copies (.gz) of
# static files available. If not it should be left off as it will cause extra I/O
# for the check. It is best if you enable this in a location{} block for
# a specific directory, or on an individual server{} level.
# gzip_static on;
