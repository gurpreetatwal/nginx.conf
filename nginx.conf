# Configuration File - Nginx Server Configs
# https://nginx.org/en/docs/dirindex.html

# Run as a unique, less privileged user for security reasons.
# Default: nobody nobody
user       www-data www-data;

# Log errors and warnings to this file
# Default: logs/error.log error
error_log  /var/log/nginx/error.log warn;

# The file storing the process ID of the main process
# Default: nginx.pid
pid        /run/nginx.pid;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
# Default: 1
worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
# Default: no limit
worker_rlimit_nofile 8192;

include /etc/nginx/modules-enabled/*.conf;

events {
  # Maximum number of connections that can be opened by a worker process
  # Should be < worker_rlimit_nofile.
  # Default: 512
  worker_connections 1024;
}

http {

  # Hide nginx version information.
  # Default: on
  server_tokens off;

  # Add Content-Type header, performing a conversion if needed
  # Defaut: off
  charset       utf-8;

  # Update charset_types to match updated mime.types.
  # text/html is always included by charset module.
  # Default: text/html text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml
  charset_types
    text/css
    text/plain
    text/vnd.wap.wml
    text/javascript
    text/markdown
    text/calendar
    text/x-component
    text/vcard
    text/cache-manifest
    text/vtt
    application/json
    application/manifest+json;

  # Default MIME type for responses
  # Default: text/plain
  default_type application/octet-stream;

  # How long to allow each connection to stay idle.
  # Longer values are better for each individual client, particularly for SSL,
  # but means that worker connections are tied up longer.
  # Default: 75s
  keepalive_timeout 300s;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  # For performance reasons, on FreeBSD systems w/ ZFS
  # this option should be disabled as ZFS's ARC caches
  # frequently used files in RAM by default.
  # Default: off
  sendfile        on;

  # Don't send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out.
  # Default: off
  tcp_nopush      on;

  # Log access to this file
  # Default: logs/access.log combined
  access_log /var/log/nginx/access.log combined buffer=32k flush=30s;

  # Cache file descriptors for log files so that the file is not opened and
  # closed for every single write
  # max: number of FDs to cache, LRU eviction after that
  # [inactive=10s]: FD is removed from cache if no uses in this time period
  # [min_uses=1]: number of uses need to prevent eviction
  # [valid=60s]; interval on which to check file still exists on disk
  # Default: off
  open_log_file_cache max=12 inactive=60m;

  include conf.d/*.conf;
  include sites-enabled/*;

  ## CORS

  map $server_cors $server_cors {
    default "*";
  }
  map $sent_http_content_type $cors {
    # Images
    ~*image/ $server_cors;

    # Web fonts
    ~*font/                         $server_cors;
    ~*application/vnd.ms-fontobject $server_cors;
    ~*application/x-font-ttf        $server_cors;
    ~*application/font-woff         $server_cors;
    ~*application/x-font-woff       $server_cors;
    ~*application/font-woff2        $server_cors;
  }

  ## CSP

  map $server_content_security_policy $server_content_security_policy {
    default "default-src 'self'; base-uri 'none'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests";
  }
  map $sent_http_content_type $content_security_policy {
    ~*text/html $server_content_security_policy;
  }

  ## Referrer Policy

  map $server_referrer_policy $server_referrer_policy {
    default "no-referrer-when-downgrade";
  }
  map $sent_http_content_type $referrer_policy {
    ~*text/html $server_referrer_policy;
  }

  ## X-Frame-Options

  map $server_x_frame_options $server_x_frame_options {
    default "DENY";
  }
  map $sent_http_content_type $x_frame_options {
    ~*text/html $server_x_frame_options;
  }

  ## X-XSS-Protection
  map $server_x_xss_protection $server_x_xss_protection {
    default "1; mode=block";
  }
  map $sent_http_content_type $x_xss_protection {
    ~*text/html $server_x_xss_protection;
  }

  ## WebSocket Support
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
}
